name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: ${{matrix.name || format('Rust {0}', matrix.rust)}}
    runs-on: ${{matrix.os || 'ubuntu'}}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - rust: nightly
          - rust: beta
          - rust: stable
          - rust: 1.60.0
          - name: macOS
            rust: nightly
            os: macos
    env:
      CXXFLAGS: ${{matrix.flags}}
      RUSTFLAGS: --cfg deny_warnings -Dwarnings
    steps:
      - name: Enable symlinks (windows)
        if: matrix.os == 'windows'
        run: git config --global core.symlinks true
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - name: Determine test suite subset
        # Our Windows and macOS jobs are the longest running, so exclude the
        # relatively slow compiletest from them to speed up end-to-end CI time,
        # except during cron builds when no human is presumably waiting on the
        # build. The extra coverage is not particularly valuable and we can
        # still ensure the test is kept passing on the basis of the scheduled
        # builds.
        run: |
          echo RUSTFLAGS=$RUSTFLAGS >> $GITHUB_ENV
          echo exclude=--exclude cxx-test-suite >> $GITHUB_OUTPUT
        env:
          RUSTFLAGS: ${{env.RUSTFLAGS}} ${{matrix.os && github.event_name != 'schedule' && '--cfg skip_ui_tests' || ''}}
        id: testsuite
        shell: bash
      - run: cargo run --manifest-path demo/Cargo.toml
      - run: cargo test --workspace ${{steps.testsuite.outputs.exclude}}
      - run: cargo check --no-default-features --features alloc
        env:
          RUSTFLAGS: --cfg compile_error_if_std ${{env.RUSTFLAGS}}
      - run: cargo check --no-default-features
        env:
          RUSTFLAGS: --cfg compile_error_if_alloc --cfg cxx_experimental_no_alloc ${{env.RUSTFLAGS}}
